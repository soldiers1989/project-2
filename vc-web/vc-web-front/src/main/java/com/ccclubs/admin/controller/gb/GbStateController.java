package com.ccclubs.admin.controller.gb;

import com.ccclubs.admin.controller.base.CsIndexReportController;
import com.ccclubs.admin.model.GbState;
import com.ccclubs.admin.model.ReportParam;
import com.ccclubs.admin.query.GbStateQuery;
import com.ccclubs.admin.service.IGbCsStateService;
import com.ccclubs.admin.service.IGbStateService;
import com.ccclubs.admin.task.threads.ReportThread;
import com.ccclubs.admin.util.EvManageContext;
import com.ccclubs.admin.vo.TableResult;
import com.ccclubs.admin.vo.VoResult;
import com.ccclubs.protocol.dto.gb.GBMessage;
import com.github.pagehelper.PageInfo;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.UUID;

/**
 * 车辆国标历史信息Controller
 *
 * @author Alban
 * @category generated by NovaV1.0
 * @since V1.0
 */
@RestController
@RequestMapping("/electricity/gbState")
public class GbStateController {
    private static final Logger logger = LoggerFactory.getLogger(GbStateController.class);

    @Autowired
    IGbStateService gbStateService;

    @Autowired
    IGbCsStateService igbCsStateService;

    @Autowired
    ReportThread reportThread;


    /**
     * 获取分页列表数据
     *
     * @param vin
     * @param page
     * @param rows
     * @return
     */
    @RequestMapping(value = "/list", method = RequestMethod.GET)
    public TableResult<GbState> list(String vin, @RequestParam(defaultValue = "0") Integer page,
                                     @RequestParam(defaultValue = "10") Integer rows) {
		/*PageInfo<GbState> pageInfo = gbStateService.getPage(query.getCrieria(), page, rows);
		List<GbState> list = pageInfo.getList();
		for(GbState data : list){
			registResolvers(data);
		}
		*/
        PageInfo<GBMessage> gbMessagePageInfo = igbCsStateService.getPage(vin, page, rows);
        List<GBMessage> gbMessageList = gbMessagePageInfo.getList();
        List<GbState> gbStateList = gbStateService.transferAllGbMessagesToGbStates(gbMessageList);
        PageInfo<GbState> gbStatePageInfo = new PageInfo<>();
        gbStatePageInfo.setList(gbStateList);
        CsIndexReportController.copyPageInfo(gbStatePageInfo, gbMessagePageInfo);
        TableResult<GbState> r = new TableResult<>(gbStatePageInfo);
        return r;

    }


    /**
     * 注册属性内容解析器
     */
    void registResolvers(GbState data) {
        if (data != null) {
        }
    }

    /**
     * 获取单条车辆国标历史信息信息
     */
    @RequestMapping(value = "/detail/{id}", method = RequestMethod.GET)
    public VoResult<GbState> detail(@PathVariable("vin") String vin) {
        GBMessage gbMessage = igbCsStateService.detail(vin);
        GbState gbState = gbStateService.transferGbMessageToGbState(gbMessage);
        VoResult<GbState> r = new VoResult<>();
        if (null == gbState) {
            r.setSuccess(false).setMessage("该车辆暂无数据");
            r.setValue(null);
        } else {
            r.setSuccess(true);
            r.setValue(gbState);
        }
        return r;
    }


    /**
     * 根据文本检索国标车辆状态信息并导出。
     */
    @RequestMapping(value = "/report", method = RequestMethod.POST)
    public VoResult<String> getReport(@RequestBody ReportParam<GbStateQuery> reportParam) {
        if (null == reportParam) {
            reportParam = new ReportParam<>();
        }
        reportParam.setAllReport(1);//强行修改状态数据导出为全部导出。
        List<GbState> list = null;
        List<GBMessage> gbMessageList = igbCsStateService.getAllGBMessage();
        list = gbStateService.transferAllGbMessagesToGbStates(gbMessageList);
        String uuid = UUID.randomUUID().toString();
        reportThread.setBaseName("Gb_State");
        reportThread.setList(list);
        reportThread.setUserUuid(uuid);
        reportThread.setReportParam(reportParam);
        logger.info("start running report Gb_State thread.");
        EvManageContext.getThreadPool().execute(reportThread);

        VoResult<String> r = new VoResult<>();
        r.setSuccess(true).setMessage("导出任务已经开始执行，请稍候。");
        r.setValue(uuid);
        return r;

    }

}
